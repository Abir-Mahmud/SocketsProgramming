Start of Each Scene
 - Verify Sound : Check Audio Levels on Z-F1
 - Sound Sync when CAM-A & CAM-B


[SCENE 000]
CAM-A : BMPCC4K
 * WB CARD
 * VIDEO CHART

END SCENE

[SCENE 001]
CAM-A : BMPCC4K

Intro
 One More Thing - Json Support
 It's time to update our solution and bring our Json Messaging support current with our Xml Messaging support.

END SCENE


[SCENE 002] : Refactoring Required
CAM-A : BMPCC4K
As part of efforts to implement Json Message Dispatching Support, it'll be necessary to do some refactoring.  And we'll see
the power of Generics.

* MessageDispatcher
  Will handle more of the common behavior shared between the Xml Message Dispatcher and the new Json Message Dispatcher
    {Pause}
 

* Refactor RouteAttribute and Create new Route Attributes for XPath and Json
  XPathRoute
  {Pause}

* Update XmlMessageDispatcher and verify our refactoring preserves existing functionality
  {b-roll} : clips of updating XmlDispatcher
  {pause}

* Update Client and Server to apply refactoring updates

{Pause} : END SCENE


[SCENE 003] : Refactoring 
CAM-A : BMPCC4K
CAM-B : OBS
Let's Jump into our Solution and begin our refactoring
 - MessageDispatcher
 - XPathRoute
 - XmlMessageDispatcher
 - Update Client & Server
 - Validation Run

With our refactoring complete, let's add support for Json

{Pause} : END SCENE


[SCENE 004] : Json
CAM-A : BMPCC4K
CAM-B : OBS

* Implementing Json Message Dispatching Support

 - JsonSerialization.cs
 {Pause}

 - JsonRouteAttribute
 {Pause}

 - JsonMessageDispatcher
 {Pause}

 - JsonChannels
 {Pause}

Next we'll clean up the Messages
END SCENE

[SCENE 005] : Messages
CAM-A : BMPCC4K
CAM-B : OBS


 * Add JsonPropertyAttributes and discuss why

With our Messages Updated, time to update the Client and Server with our Json Support

END SCENE

[SCENE 006] : Client & Server Updates
CAM-A : BMPCC4K
CAM-B : OBS

 - Server
    : Rename EchoServer to SocketServer
    : Update MessageHandler from static to non-static type & discuss why
    : Add JsonRoute attributes
    : Add JsonMessageDispatcher
    : Add JsonChannel


 - Client 
     : Update MessageHandler from static to non-static type & discuss why
     : Add JsonRoute attributes
     : Add JsonMessageDispatcher
     : Add JsonChannel

RUN and Verify

With our new updates solution supporting Json we could stop right here, but let's add 1 more thing - Binding.
{PAUSE}
END SCENE

[SCENE 007] : Channel and Controller Binding
CAM-A : BMPCC4K

  Add support for Channel Binding
     Handle the OnMessage code and place that in the MessageDispatcher.
    {b-roll} : Implementation Shot slow scrolling : Show EchoServer and New MessageDispatcher.BindChannel<TProtocol>(....)
    {Pause}

 Add support for Controller Binding
   Rather than register each message handler, we'll implement support for binding to a controller in order to register message handlers
    {b-roll} : Implementation Shot slow scrolling
    {Pause}


[SCENE 008] : BindChannel<TProtocol>()
CAM-A : BMPCC4K
CAM-B : OBS

 * Implementation
 * Update Server
 * Update Client

RUN and Verify


{Pause}
END SCENE


[SCENE 009] : BindController<T>()
CAM-A : BMPCC4K
CAM-B : OBS


 * Update Server
 * Update Client

RUN and Verify
END SCENE

[SCENE 010] : Summary
 Power of Generics
 

Until Next Time....Happy Coding!
CAM-A : BMPCC4K

END SCENE




